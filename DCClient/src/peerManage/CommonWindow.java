/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package peerManage;

import fileAndFolderDownload.FileSender;
import fileAndFolderDownload.sendDSHandle;
import filelisting.GetQueryResult;
import filelisting.QuerListen;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import sharedFileAndFolder.FileAndFolerChooser;
import yodcclient.StartingWindow;

/**
 *
 * @author satyam
 */
public class CommonWindow extends javax.swing.JFrame {

    /**
     * Creates new form usersList
     */
    public HashMap<String,Integer> userToIndex=new HashMap<>();
    public DefaultListModel dlm;
    //UsersListDisp curObj;
    UserDetails userDet;
    public void addUser(String user){
        
    }
    public CommonWindow(String nick,String ip,DatagramSocket ds,int port) {
        initComponents();
        userDet=new UserDetails(nick, ip,port);
        this.setTitle("Current Session : " + nick + " @ " + ip + ":" + port);
        userDet.shareFileNfolder.pathToIndex=new HashMap<String,Integer>();
        userDet.shareFileNfolder.pathToIndex.put("#",0);
        userDet.shareFileNfolder.fileNFolderTree.add(new ArrayList<>());
        dlm =(DefaultListModel)userList.getModel();
        new MessageHandle().start();
        new QuerListen(userDet).start();
        new sendDSHandle(userDet).start();
        new FileSender(userDet).start();
       
        new ConOrDisSigReceive(this,userDet,ds).start();
         userList.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent ev){
            System.out.println("Mouse pressed");
            
            if(ev.getClickCount()==2){
                
                System.out.println("Mouse 2 pressed");
                int selItem=userList.getSelectedIndex();
                if(selItem==-1){
                    JOptionPane.showMessageDialog(null,"Select proper item");
                    return;
                }
                new GetQueryResult(false, userList.getSelectedValue(), userDet).setVisible(true);
            }
        }
        });
    }
    
    class MessageHandle extends Thread {
        
        @Override
        public void run() {
            DatagramSocket recSock = null;
            try {
                recSock = new DatagramSocket(userDet.curPort+1);
            } catch (SocketException ex) {
                Logger.getLogger(CommonWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
            while (true) {
                try {
                    byte[] buf = new byte[1024];
                    DatagramPacket pack = new DatagramPacket(buf,buf.length);
                    recSock.receive(pack);
                    String toShow = new String(pack.getData(),0,pack.getLength());
                    chatArea.append(toShow + "\n");
                } catch (SocketException ex) {
                    Logger.getLogger(CommonWindow.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(CommonWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList<>();
        addFilesAndFolders = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        chatArea = new javax.swing.JTextArea();
        msgField = new javax.swing.JTextField();
        sendBut = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        connectToNewHost = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userList.setModel(new DefaultListModel());
        jScrollPane1.setViewportView(userList);

        addFilesAndFolders.setText("Add files and Folders");
        addFilesAndFolders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFilesAndFoldersActionPerformed(evt);
            }
        });

        jLabel1.setText("Online Users");

        chatArea.setEditable(false);
        chatArea.setColumns(20);
        chatArea.setRows(5);
        jScrollPane2.setViewportView(chatArea);

        msgField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                msgFieldActionPerformed(evt);
            }
        });

        sendBut.setText("Send");
        sendBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        connectToNewHost.setText("Connect to New Hub");
        connectToNewHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectToNewHostActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(connectToNewHost)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(msgField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sendBut)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addFilesAndFolders)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(connectToNewHost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(msgField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendBut)
                    .addComponent(addFilesAndFolders)
                    .addComponent(searchButton))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFilesAndFoldersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFilesAndFoldersActionPerformed
        FileAndFolerChooser ffc = new FileAndFolerChooser(userDet);
        ffc.setLocationRelativeTo(null);
        ffc.setVisible(true);
    }//GEN-LAST:event_addFilesAndFoldersActionPerformed

    private void msgFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_msgFieldActionPerformed
        // TODO add your handling code here:
        sendBut.doClick();
        msgField.setText("");
    }//GEN-LAST:event_msgFieldActionPerformed

    private void sendButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButActionPerformed
        try {
            // TODO add your handling code here:
            String msg = msgField.getText();
            if (msg == null || msg == "")
                return;
            msg = "<" + userDet.curUser + "> : " + msg; 
            DatagramSocket sendSock = new DatagramSocket();
            byte[] buf = msg.getBytes();
            DatagramPacket pack = new DatagramPacket(buf, buf.length, InetAddress.getByName(userDet.serverIP), 4500);
            sendSock.send(pack);
            
            
        } catch (SocketException ex) {
            Logger.getLogger(CommonWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(CommonWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CommonWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sendButActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        GetQueryResult gqr = new GetQueryResult(true, "", userDet);
        gqr.setLocationRelativeTo(null);
        gqr.setVisible(true);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void connectToNewHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectToNewHostActionPerformed
        // TODO add your handling code here:
        
        StartingWindow sw = new StartingWindow();
        sw.setLocationRelativeTo(null);
        sw.setVisible(true);
    }//GEN-LAST:event_connectToNewHostActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFilesAndFolders;
    private javax.swing.JTextArea chatArea;
    private javax.swing.JButton connectToNewHost;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField msgField;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton sendBut;
    private javax.swing.JList<String> userList;
    // End of variables declaration//GEN-END:variables
}
